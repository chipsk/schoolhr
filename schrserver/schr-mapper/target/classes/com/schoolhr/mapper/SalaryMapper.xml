<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.schoolhr.mapper.SalaryMapper">
    <resultMap id="SalaryResultMap" type="com.schoolhr.model.Salary" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="userID" property="userID" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="departmentid" property="departmentid" jdbcType="INTEGER" />
        <result column="basisSalary" property="basisSalary" jdbcType="INTEGER" />
        <result column="allSalary" property="allSalary" jdbcType="VARCHAR" />
        <result column="bonus" property="bonus" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="adate" property="adate" jdbcType="DATE" />
    </resultMap>
    <sql id="Salary_Column_List" >
        uid, userID, username, departmentid, basisSalary, allSalary, bonus, remark, adate
    </sql>
    <select id="selectByPrimaryKey" resultMap="SalaryResultMap" resultType="com.schoolhr.model.Salary">
        select
        <include refid="Salary_Column_List" />
        from salary
        where id = #{id,jdbcType=INTEGER}
    </select>
    <insert id="insert" parameterType="com.schoolhr.model.Salary">
    insert into salary(userID,username,departmentid,basisSalary,allSalary,bonus,remark,adate)
    values(#{userID,jdbcType=INTEGER},#{username,jdbcType=VARCHAR},#{departmentid,jdbcType=INTEGER},#{basisSalary,jdbcType=INTEGER},
           #{allSalary,jdbcType=VARCHAR},#{bonus,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR}, #{adate,jdbcType=DATE})
    </insert>
    <insert id="insertSelective" parameterType="com.schoolhr.model.Salary">
        insert into salary
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userID != null">
                userID,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="departmentid != null">
                departmentid,
            </if>
            <if test="basisSalary != null">
                basisSalary,
            </if>
            <if test="allSalary != null">
                allSalary,
            </if>
            <if test="bonus != null">
                bonus,
            </if>

            <if test="remark != null">
                remark,
            </if>

            <if test="adate != null">
                adate
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userID != null">
                #{userID,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="departmentid != null">
                #{departmentid,jdbcType=INTEGER},
            </if>
            <if test="basisSalary != null">
                #{basisSalary,jdbcType=INTEGER},
            </if>
            <if test="allSalary != null">
                #{allSalary,jdbcType=VARCHAR},
            </if>
            <if test="bonus != null">
                #{bonus,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR}
            </if>
            <if test="adate != null">
                #{adate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.schoolhr.model.Salary">
     update salary
    <set>
        <if test="userID != null">
            userID = #{userID,jdbcType=INTEGER},
        </if>
        <if test="username != null">
            username = #{username,jdbcType=VARCHAR},
        </if>
        <if test="departmentid != null">
            departmentid = #{departmentid,jdbcType=INTEGER},
        </if>
        <if test="basisSalary != null">
            basisSalary = #{basisSalary,jdbcType=INTEGER},
        </if>
        <if test="allSalary != null">
            allSalary = #{allSalary,jdbcType=VARCHAR},
        </if>
        <if test="remark != null">
            remark = #{remark,jdbcType=VARCHAR}
        </if>
        <if test="remark != null">
            remark = #{remark,jdbcType=VARCHAR}
        </if>
        <if test="adate != null">
            adate = #{adate,jdbcType=DATE},
        </if>
    </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.schoolhr.model.Salary">
        update salary
        set userID = #{userID,jdbcType=INTEGER},
            username = #{username,jdbcType=VARCHAR},
            departmentid = #{departmentid,jdbcType=INTEGER},
            basisSalary = #{basisSalary,jdbcType=INTEGER},
            allSalary = #{allSalary,jdbcType=VARCHAR},
            bonus = #{bonus,jdbcType=VARCHAR},
            adate = #{adate,jdbcType=DATE},
            remark = #{remark,jdbcType=VARCHAR},
        where id = #{id,jdbcType=INTEGER}
    </update>
    <delete id="deleteByPrimaryKey">
        delete from salary
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <select id="getAllSalaries" resultType="com.schoolhr.model.Salary">
        Select * from salary
    </select>
    <select id="getIDSalaries" resultType="com.schoolhr.model.Salary">
        Select * from salary where userID=#{userID}
    </select>
    <select id="getnameSalaries" resultType="com.schoolhr.model.Salary">
        Select * from salary where username = #{username}
    </select>
    <select id="getdepartSalaries" resultType="com.schoolhr.model.Salary"></select>
    <select id="getSalariesByPage" resultType="com.schoolhr.model.Salary">
        Select * from salary where 1=1
        <if test="sal.username !=null and sal.username!=''">
            and username like concat('%',#{sal.username},'%')
        </if>
        <if test="sal.userID !=null">
            and userID =#{sal.userID}
        </if>
        <if test="page !=null and size!=null">
            limit #{page},#{size}
        </if>
    </select>


</mapper>